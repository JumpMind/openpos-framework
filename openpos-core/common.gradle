group = 'org.jumpmind.pos'

repositories { mavenCentral() }

apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'

sourceSets {
    // In order to reference groovy from Java, the source sets need to be considered together during compilation (in
    // the groovy plugin, which extends the java plugin and handles java sources).
    main {
        java { srcDirs = []}
        groovy { srcDirs += ['src/main/java']}
    }
}

sourceCompatibility=1.8
targetCompatibility=1.8

ext {
    jnaVersion = '4.1.0'
    springfoxSwaggerVersion='2.9.2'
    javaposVersion='1.14.2'
    slf4jVersion='1.7.25'
    log4jVersion='1.2.17'
    jacksonVersion='2.8.10'
}

processResources {
    eachFile { details ->
        if (details.name.endsWith('version.properties')) {
                filter(org.apache.tools.ant.filters.ReplaceTokens, tokens: [
                    'version': appVersion,
                    'buildTime': new java.text.SimpleDateFormat('yyyy-MM-dd HH:mm:ss').format(new java.util.Date()),
                    'gitBranch' : gitBranch,
                    'gitHash' : gitHash,
                    'buildNumber' : buildNumber,
                    'buildName' : buildName
                ])
        }
    }
}


repositories { maven { url symmetricMavenUrl } }

idea {

    module {
        resourceDirs += file('src/test/resources')

        downloadJavadoc = true
        downloadSources = true
    }
}

eclipse {
    classpath {
        downloadSources = true
        downloadJavadoc = false
    }

    project {
        resourceFilter {
            appliesTo = 'FILES_AND_FOLDERS'
            type = 'EXCLUDE_ALL'
            matcher {
                id = 'org.eclipse.ui.ide.orFilterMatcher'
                //               matcher {
                //                 id = 'org.eclipse.ui.ide.multiFilter'
                //                 arguments = '1.0-projectRelativePath-matches-false-false-bin'
                //               }
                matcher {
                    id = 'org.eclipse.ui.ide.multiFilter'
                    arguments = '1.0-projectRelativePath-matches-false-false-build'
                }
                matcher {
                    id = 'org.eclipse.ui.ide.multiFilter'
                    arguments = '1.0-name-matches-false-false-*.class'
                }
                matcher {
                    id = 'org.eclipse.ui.ide.multiFilter'
                    arguments = '1.0-name-matches-false-false-node_modules'
                }
            }
        }        
    }
}

test {
    // ignoreFailures = true
    testLogging.showStandardStreams = true

    //Dynamic exclude through property defined in the build.gradle file
    if (project.hasProperty('excludeTests')) {
        println('Excluding tests: ' + project.property('excludeTests'));
        exclude project.property('excludeTests')
    }
}

task testJar(type: Jar) {
    classifier "test"
    from sourceSets.test.output
}

task develop {
    description 'Generates Eclipse artifacts and sets up your development environment'
    dependsOn tasks.cleanEclipse, tasks.eclipse, tasks.cleanIdea, tasks.idea
    delete '.settings'
}

configurations { testArtifacts }

artifacts {  testArtifacts testJar  }


dependencies {
    compile group: 'org.codehaus.groovy', name: 'groovy', version: '2.5.5'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.6'
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.1'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile "org.springframework:spring-context:$springVersion"
    compile group: 'org.springframework.data', name: 'spring-data-commons', version: "${springDataCommon}"
    compile group: 'org.joda', name: 'joda-money', version: '1.0.1'

    compile group: 'org.slf4j', name: 'slf4j-api', version: "${slf4jVersion}"
    compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: "${slf4jVersion}"
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: "${slf4jVersion}"
    compile(group: 'log4j', name: 'log4j', version: "${log4jVersion}")

    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.9.5'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile "org.springframework:spring-test:$springVersion"
}
